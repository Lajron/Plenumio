// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plenumio.Infrastructure.Data;

#nullable disable

namespace Plenumio.Infrastructure.Migrations
{
    [DbContext(typeof(PlenumioDbContext))]
    [Migration("20250819234332_updateTagTableAndSeed")]
    partial class updateTagTableAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Plenumio.Core.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCanonical")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayedName = "Technology",
                            IsCanonical = true,
                            Name = "technology",
                            createdAt = new DateTime(2025, 8, 19, 23, 43, 31, 328, DateTimeKind.Utc).AddTicks(5306)
                        },
                        new
                        {
                            Id = 2,
                            DisplayedName = "Life",
                            IsCanonical = true,
                            Name = "life",
                            createdAt = new DateTime(2025, 8, 19, 23, 43, 31, 328, DateTimeKind.Utc).AddTicks(5309)
                        },
                        new
                        {
                            Id = 3,
                            DisplayedName = "Science",
                            IsCanonical = true,
                            Name = "science",
                            createdAt = new DateTime(2025, 8, 19, 23, 43, 31, 328, DateTimeKind.Utc).AddTicks(5311)
                        },
                        new
                        {
                            Id = 4,
                            DisplayedName = "Art",
                            IsCanonical = true,
                            Name = "art",
                            createdAt = new DateTime(2025, 8, 19, 23, 43, 31, 328, DateTimeKind.Utc).AddTicks(5312)
                        },
                        new
                        {
                            Id = 5,
                            DisplayedName = "Gaming",
                            IsCanonical = true,
                            Name = "gaming",
                            createdAt = new DateTime(2025, 8, 19, 23, 43, 31, 328, DateTimeKind.Utc).AddTicks(5314)
                        });
                });

            modelBuilder.Entity("Plenumio.Core.Entities.Tag", b =>
                {
                    b.HasOne("Plenumio.Core.Entities.Tag", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Plenumio.Core.Entities.Tag", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
